@using Blazored.FluentValidation
@using Home.Recipes.WebClient.Services.Recipes
@using Home.Recipes.WebClient.Services.Recipes.Models
@using System.Text.Json
@using Home.Recipes.WebClient.Components.Buttons
@implements IDialogContentComponent

<EditForm EditContext="@_editContext" FormName="create_recipe">
    <FluentValidationValidator />

    <div class="mb-4">
        <label class="block text-gray-700 text-sm font-bold mb-2" for="recipe_name">
            Name
        </label>
        <InputText @bind-Value="@_command.Name"
        class="shadow appearance-none border rounded w-full py-2 px-3 text-gray-700 leading-tight focus:outline-none focus:shadow-outline"
        id="recipe_name"
        placeholder="Recipe name" />
    </div>

    <div class="mb-4">
        <label class="block text-gray-700 text-sm font-bold mb-2" for="recipe_description">
            Description
        </label>
        <InputTextArea @bind-Value="@_command.Description"
        class="shadow appearance-none border rounded w-full py-2 px-3 text-gray-700 leading-tight focus:outline-none focus:shadow-outline"
        id="recipe_description"
        placeholder="Description" />
    </div>

    <div class="mb-4">
        <label class="block text-gray-700 text-sm font-bold mb-2" for="recipe_preparationTime">
            Preparation time (in minutes)
        </label>

        <InputNumber @bind-Value="@_command.PreparationTimeInMinutes"
        class="shadow appearance-none border rounded w-full py-2 px-3 text-gray-700 leading-tight focus:outline-none focus:shadow-outline"
        id="recipe_preparationTime" />
    </div>

    <div class="mb-4">
        <label class="block text-gray-700 text-sm font-bold mb-2" for="recipe_cookingTime">
            Cooking time
        </label>
        <InputNumber @bind-Value="@_command.CookingTimeInMinutes"
        class="shadow appearance-none border rounded w-full py-2 px-3 text-gray-700 leading-tight focus:outline-none focus:shadow-outline"
        id="recipe_cookingTime" />
    </div>

</EditForm>

@* Footer *@
<FluentDialogFooter>
    <FluentButton Appearance="Appearance.Accent"
    Type="Microsoft.FluentUI.AspNetCore.Components.ButtonType.Submit" 
    FormId="create_recipe"
    OnClick="@SaveAsync">
        Save
    </FluentButton>
    <FluentButton Appearance="Appearance.Neutral" OnClick="@CancelAsync">Cancel</FluentButton>
</FluentDialogFooter>

@code {
    private readonly RecipeService _recipeService;
    private readonly NavigationManager _navigationManager;

    private EditContext _editContext = default!;
    private bool _isLoading;
    private CreateRecipeCommand _command = new(string.Empty, string.Empty);

    [CascadingParameter]
    public FluentDialog Dialog { get; set; } = default!;

    protected override void OnInitialized()
    {
        _editContext = new EditContext(_command);
    }

    public CreateRecipeModal(RecipeService recipeService, NavigationManager navigationManager)
    {
        _recipeService = recipeService;
        _navigationManager = navigationManager;
    }

    private async Task SaveAsync()
    {
        if (!_editContext.Validate())
        {
            return;
        }

        _isLoading = true;
        var result = await _recipeService.CreateRecipeAsync(_command);
        _isLoading = false;

        if (result is not null)
        {
            _navigationManager.NavigateTo($"/recipes/{result.RecipeId}");
        }
    }

    private async Task CancelAsync() => await Dialog.CancelAsync();
}
