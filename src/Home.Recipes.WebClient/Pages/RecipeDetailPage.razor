@page "/recipes/{recipeId:guid}"
@using global::Home.Recipes.WebClient.Components.Buttons
@using global::Home.Recipes.WebClient.Services.Recipes.Models

<FluentStack HorizontalGap="1" HorizontalAlignment="HorizontalAlignment.Stretch" Class="my-2">
    <FluentStack>
        <FluentButton OnClick="@(() => _navigationManager.NavigateTo("/"))">
            <FluentIcon Value="@(new Icons.Regular.Size32.ArrowCircleLeft())" />
        </FluentButton>
        @if (_recipeDetail is not null)
        {
            <FluentLabel Typo="Typography.Header">@_recipeDetail.Name</FluentLabel>
        }
    </FluentStack>
    <FluentStack HorizontalAlignment="HorizontalAlignment.Right">
        <FluentButton OnClick="MarkAsCookedAsync" Disabled="_cooked">
            Cooked
        </FluentButton>
        <FluentButton OnClick="ChangeImageAsync">Change image</FluentButton>
        <FluentButton OnClick="DeleteRecipeAsync">
            <FluentIcon Value="@(new Icons.Regular.Size32.Delete())" Color=Color.Error />
        </FluentButton>
    </FluentStack>
</FluentStack>

<FluentDivider Style="width: 100%;" Orientation=Orientation.Horizontal Role="DividerRole.Separator" />

@if (_recipeDetail is null)
{
    <FluentProgressRing />
}
else
{
    <PageTitle>@_recipeDetail.Name</PageTitle>

    <div class="flex">
        <img class="size-64" src=" @($"{_serverUrl}/{_recipeDetail.ImagePath}")">

        <div class="flex flex-col">

            <div class="ml-3">
                <h3 class="text-xl font-bold mb-2">Description</h3>
                <p>@_recipeDetail.Description</p>
            </div>

            <div class="flex flex-row text-xs cursor-default basis-1/5">
                <div class="flex flex-row px-1 py-1 mr-1" title="preparation time">
                    <img class="w-8 h-8" src="/images/preparation-time.png" />
                    <span class="ml-2.5 mt-2.5">Preparation time:</span>
                    <span title="preparation time" class="ml-2.5 mt-2.5 cursor-default">@_recipeDetail.PreparationTime.ToString(@"hh\:mm")</span>
                </div>
                <div class="flex flex-row px-1 py-1 cursor-default" title="cooking time">
                    <img class="w-8 h-8" src="/images/cooking-time.png" />
                    <span class="ml-2.5 mt-2.5">Cooking time:</span>
                    <span title="cooking time" class="ml-2.5 mt-2.5 cursor-default">@_recipeDetail.CookingTime.ToString(@"hh\:mm")</span>
                </div>
            </div>
        </div>
    </div>

    <section class="border rounded p-2 mt-2">
        <FluentButton OnClick="AddRecipeIngredientAsync">
            <FluentIcon Value="@(new Icons.Regular.Size24.AddCircle())" Slot="start" />
            Ingredients
        </FluentButton>

        <ol>
            @foreach (var item in _recipeDetail.Ingredients)
            {
                <li class="w-full mb-2">
                    <div class="border border-sky-500 rounded bg-gray-200 flex flex-row justify-between p-4">
                        <div class="basis-1/2">
                            <div class="flex flex-row">

                                <FluentCheckbox />

                                <span>@item.Name</span>
                                <span class="ml-2">@item.Value</span>

                                @if (item.Type == IngredientType.Piece)
                                {
                                    <span class="ml-2">pieces</span>
                                }
                                @if (item.Type == IngredientType.Mass)
                                {
                                    <span class="ml-2">gram</span>
                                }
                                @if (item.Type == IngredientType.Fluid)
                                {
                                    <span class="ml-2">ml</span>
                                }
                            </div>
                        </div>
                        <div>
                            <FluentButton OnClick="@(async () => await EditRecipeIngredientAsync(_recipeDetail.Ingredients.IndexOf(item)))">
                                <FluentIcon Value="@(new Icons.Regular.Size32.Pen())" />
                            </FluentButton>
                            <FluentButton OnClick="@(async () => await RemoveRecipeIngredientAsync(_recipeDetail.Ingredients.IndexOf(item)))">
                                <FluentIcon Value="@(new Icons.Regular.Size32.Delete())" Color=Color.Error />
                            </FluentButton>
                        </div>
                    </div>
                </li>
            }
        </ol>
    </section>

    <section class="border rounded p-2 mt-2">
        <FluentButton OnClick="AddRecipeStepAsync">
            <FluentIcon Value="@(new Icons.Regular.Size24.AddCircle())" Slot="start" />
            Steps
        </FluentButton>

        <ol>
            @foreach (var item in _recipeDetail.Steps)
            {
                <li class="w-full mb-2">
                    <div class="border border-sky-500 rounded bg-gray-200 flex flex-row justify-between p-4">
                        <div class="basis-1/2">

                            <input type="checkbox" class="mr-1 mt-1 size-5">

                            @item
                        </div>
                        <div>
                            <IconButton @onclick="@(async () => await EditRecipeAsync(_recipeDetail.Steps.IndexOf(item)))" />
                            <IconButton Class="ml-2" @onclick="@(async () => await RemoveRecipeStepAsync(_recipeDetail.Steps.IndexOf(item)))" />
                        </div>
                    </div>
                </li>
            }
        </ol>
    </section>
}